MODEL: #MODEL field
    framework: "RecognizerTransformer" #Mandatory, indicate the type of network, associate to the 'paddlevideo/modeling/framework/' .
    backbone: #Mandatory, indicate the type of backbone, associate to the 'paddlevideo/modeling/backbones/' .
        name: "SwinTransformer3D" #Mandatory, The name of backbone.
#        pretrained: "data/swin_base_patch4_window7_224.pdparams" #Optional, pretrained model path.
        pretrained: "" #
        patch_size: [2, 4, 4]
        embed_dim: 128
        depths: [2, 2, 18, 2]
        num_heads: [4, 8, 16, 32]
        window_size: [8, 7, 7]
        mlp_ratio: 4.
        qkv_bias: True
        qk_scale: None
        drop_rate: 0.0
        attn_drop_rate: 0.0
        drop_path_rate: 0.2
        patch_norm: True
    head:
        name: "I3DHead" #Mandatory, indicate the type of head, associate to the 'paddlevideo/modeling/heads'
        num_classes: 5 #Optional, the number of classes to be classified.
        in_channels: 1024 #input channel of the extracted feature.
        spatial_type: "avg"
        drop_ratio: 0.5 #the ratio of dropout
        std: 0.01 #std value in params initialization


DATASET: #DATASET field
    batch_size: 4 #Mandatory, bacth size
    num_workers: 0 #Mandatory, XXX the number of subprocess on each GPU.
    test_batch_size: 1
    train:
        format: "FrameDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
        data_prefix: "" #Mandatory, train data root path
        file_path: "/media/dp504/36675aac-be99-45b0-abf0-9c74c037c1b7/PycharmProjects/swf/datasset/dataset_last/task_VideoClassfy_frames/task_VideoClassfy_frames_train_list.txt"
        suffix: 'img_{:05}.jpg'
    valid:
        format: "FrameDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
        data_prefix: "" #Mandatory, valid data root path
        file_path: "/media/dp504/36675aac-be99-45b0-abf0-9c74c037c1b7/PycharmProjects/swf/datasset/dataset_last/task_VideoClassfy_frames/task_VideoClassfy_frames_val_list.txt"
        suffix: 'img_{:05}.jpg'
    test:
        format: "FrameDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
        data_prefix: "" #Mandatory, valid data root path
        file_path: "/media/dp504/36675aac-be99-45b0-abf0-9c74c037c1b7/PycharmProjects/swf/datasset/dataset_last/task_VideoClassfy_frames/task_VideoClassfy_frames_val_list.txt"
        suffix: 'img_{:05}.jpg'

PIPELINE: #PIPELINE field TODO.....
    train: #Mandotary, indicate the pipeline to deal with the training data, associate to the 'paddlevideo/loader/pipelines/'
        decode:
            name: "FrameDecoder"
        sample:
            name: "Sampler"
            num_seg: 3
            seg_len: 1
            valid_mode: False
            dense_sample: True
        transform: #Mandotary, image transfrom operator
            - Scale:
                short_size: 340
            - MultiScaleCrop:
                target_size: 340
            - RandomCrop:
                target_size: 320
            - RandomFlip:
            - Image2Array:
            - Normalization:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]
    valid: #Mandatory, indicate the pipeline to deal with the validing data. associate to the 'paddlevideo/loader/pipelines/'
        decode:
            name: "FrameDecoder"
        sample:
            name: "Sampler"
            num_seg: 3
            seg_len: 1
            valid_mode: True
        transform:
            - Scale:
                short_size: 340
            - CenterCrop:
                target_size: 320
            - Image2Array:
            - Normalization:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]
    test:
        decode:
            name: "FrameDecoder"
        sample:
            name: "Sampler"
            num_seg: 3
            seg_len: 1
            valid_mode: True
            dense_sample: True
        transform:
            - Scale:
                short_size: 340
            - GroupFullResSample:
                crop_size: 320
            - Image2Array:
            - Normalization:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]

OPTIMIZER: #OPTIMIZER field
    name: "AdamW" #Mandatory, the type of optimizer, associate to the 'paddlevideo/solver/'
    beta1: 0.9
    beta2: 0.999
    no_weight_decay_name: "norm relative_position_bias_table"
    learning_rate: #Mandatory, the type of learning rate scheduler, associate to the 'paddlevideo/solver/'
        name: "CustomWarmupCosineStepDecay"
        iter_step: True
        warmup_iters: 2.5
        warmup_ratio: 0.1
        min_lr: 0
        base_lr: 3e-5
        max_epoch: 30
    weight_decay: 0.05

METRIC:
    name: "CenterCropMetric"

INFERENCE:
    name: 'ppTSM_Inference_helper'
#    num_seg: 3
    num_seg: 3
    short_size: 340
    target_size: 320 #224

model_name: "VideoSwin_base_task_VideoClassfy_no_pretrained"
#log_interval: 20 #Optional, the interal of logger, default:10
#save_interval: 5
log_interval: 1 #Optional, the interal of logger, default:10
#save_interval: 1
epochs: 30 #Mandatory, total epoch
log_level: "INFO" #Optional, the logger level. default: "INFO"
